buffers = { ...
'-3*2;', ... % 6
'1/10+1;',...
'13;', ... % 13 
'1+1;', ... % 2
'1-5;', ... % -4
'1+2-5-2+2;', ... % -2
'1-2+5-2+2;', ... % 4
'(10);', ... % 10
'1-(-1-1)-1+(1+1+2)+5+(1);', ... %10 
'5+5-3/(3*(2/3)+(2)+5);', ...
'1+12/(1+2-2*(2/4-2*3));', ...
'2^3^4;', ...
'2^(2^2);', ...
'2^(2+1)-3*(2^(1/6))^(1/3);', ...
'-2^2;', ...
'-(2^2)-2-2;'};
answers = [ -6 1.1 13 2 -4 -2 4 10 12 9.666666666666666 1.857142857142857 4096 16    4.882222321904470 -4 -8];
results = [];
for i=1:numel(answers) % numel(buffers)
parser = Parser(Tokenizer(Buffer(buffers{i})));
results(i) = parser.require_STATEMENT().evaluate([]);
end
assert(all(abs(answers-results)<1e-13));
