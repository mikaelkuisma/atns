function Data = updateGuildInfo(Data)
gtypes = {Data.Guilds.type};
glabels = {Data.Guilds.label};

iDetritusGuilds = find(strcmpi(gtypes,'Detritus'));
iProducerGuilds = find(strcmpi(gtypes,'Producer'));
iConsumerGuilds = find(strcmpi(gtypes,'Consumer'));
iFishGuilds = find(strcmpi(gtypes,'Fish'));
iConsumerAndFishGuilds = [iConsumerGuilds iFishGuilds];
iPOC = find(strcmpi(glabels,'POC'));
iDOC = find(strcmpi(glabels,'DOC'));
iBac = find(strcmpi(glabels,'Bac'));
iFoodGuilds = find(any(Data.adjacencyMatrix,1));
iFeederGuilds = find(any(Data.adjacencyMatrix,2))';

nGuilds = length(Data.Guilds);
nDetritusGuilds = length(iDetritusGuilds);
nProducerGuilds = length(iProducerGuilds);
nConsumerGuilds = length(iConsumerGuilds);
nFishGuilds = length(iFishGuilds);
nConsumerAndFishGuilds = nConsumerGuilds+nFishGuilds;
nFoodGuilds = length(iFoodGuilds);
nFeederGuilds = length(iFeederGuilds);
fishgls = {Data.Guilds(iFishGuilds).label};
S.subs = {1,1:3}; S.type = '()';
nFishSpecies = length(unique(cellfun(@(x)subsref(x,S),fishgls,'uniformoutput',false)));
if nFishSpecies > 0
    FishAges = [Data.Guilds(iFishGuilds).age];
    iLarvaeFishGuilds = iFishGuilds(FishAges == 0);
    iJuvenileFishGuilds = iFishGuilds(FishAges == 1);
    iAdultFishGuilds = iFishGuilds(FishAges > 1);
%     
%     tempcell0 = (cellfun(@eq,fishgls,repmat({'0'},1,nFishGuilds),'uniformoutput',false));
%     tempcell1 = (cellfun(@eq,fishgls,repmat({'1'},1,nFishGuilds),'uniformoutput',false));
%     tempbool0 = vertcat(tempcell0{:});
%     tempbool1 = vertcat(tempcell1{:});
% %     iLarvaeFishGuilds = iFishGuilds(any(tempbool0,2));
% %     iJuvenileFishGuilds = iFishGuilds(any(tempbool1,2));
%     iLarvaeFishGuilds = iFishGuilds(tempbool0(:,end));
%     iJuvenileFishGuilds = iFishGuilds(tempbool1(:,end));
% 
%     iAdultFishGuilds = iFishGuilds(~any([any(vertcat(tempcell0{:}),2) any(vertcat(tempcell1{:}),2)],2));
else
    iLarvaeFishGuilds = [];
    iJuvenileFishGuilds = [];
    iAdultFishGuilds = [];
end

% % OR MAYBE NOT
% % Trout larvae and juveniles considered separately so remove them here
% for i = 1:length(iLarvaeFishGuilds)
%     lfishgl = fishgls{iLarvaeFishGuilds(i) == iFishGuilds};
%     if strcmpi(lfishgl(1:3),'Tro')
%         iTroLarvae = iLarvaeFishGuilds(i);
%         iLarvaeFishGuilds(iLarvaeFishGuilds == iTroLarvae) = [];
%         iFishGuilds(iFishGuilds == iTroLarvae) = [];
%     end
% end
% for i = 1:length(iJuvenileFishGuilds)
%     jfishgl = fishgls{iJuvenileFishGuilds(i) == iFishGuilds};
%     if strcmpi(jfishgl(1:3),'Tro')
%         iTroJuvenile = iJuvenileFishGuilds(i);
%         iJuvenileFishGuilds(iJuvenileFishGuilds == iTroJuvenile) = [];
%         iFishGuilds(iFishGuilds == iTroJuvenile) = [];
%     end
% end

nAdultFishGuilds = length(iAdultFishGuilds);
nLarvaeFishGuilds = length(iLarvaeFishGuilds);
nJuvenileFishGuilds = length(iJuvenileFishGuilds);

iAdultFishGuildsInFish = find(ismember(iFishGuilds,iAdultFishGuilds));
iDOCInFoodGuilds = find(ismember(iFoodGuilds,iDOC));
iProducerGuildsInFood = find(ismember(iFoodGuilds,iProducerGuilds));
iProducerFoodGuildsInProducers = find(ismember(iProducerGuilds,iFoodGuilds));
iFishGuildsInConsumers = find(ismember(iConsumerAndFishGuilds,iFishGuilds));
iFishGuildsInFeeders = find(ismember(iFeederGuilds,iFishGuilds));
iFishGuildsInFood = find(ismember(iFoodGuilds,iFishGuilds));
iFishFoodInFishGuilds = find(ismember(iFishGuilds,intersect(iFishGuilds,iFoodGuilds)));
iNonFishGuildsInConsumers = find(~ismember(iConsumerAndFishGuilds,iFishGuilds));
iNonFishGuildsInFeeders = find(~ismember(iFeederGuilds,iFishGuilds));
iConsumerGuildsInFood = find(ismember(iFoodGuilds,iConsumerGuilds));
iConsumerFoodGuildsInConsumers = find(ismember(iConsumerGuilds,iConsumerGuilds(ismember(iConsumerGuilds,iFoodGuilds))));
iConsumerNonfoodGuildsInConsumers = find(ismember(iConsumerGuilds,iConsumerGuilds(~ismember(iConsumerGuilds,iFoodGuilds))));
iBacInConsumers = find(ismember(iConsumerAndFishGuilds,iBac));
% iConsumerGuildsInFeeders = find(ismember(iFeederGuilds,iConsumerGuilds));
iConsumerGuildsInFeeders = find(ismember(iConsumerGuilds,iFeederGuilds));
iFeederGuildsInConsumersAndFish = find(ismember(union(iConsumerGuilds, iFishGuilds),iFeederGuilds));

FishAges = vertcat(Data.Guilds(iFishGuilds).age);

Data.GuildInfo = struct( ...
    'iDetritusGuilds', iDetritusGuilds, ...
    'iPOC', iPOC, ...
    'iDOC', iDOC, ...
    'iBac', iBac, ...
    'iProducerGuilds', iProducerGuilds, ...
    'iConsumerGuilds', iConsumerGuilds, ...
    'iFishGuilds', iFishGuilds, ...
    'iFoodGuilds', iFoodGuilds, ...
    'iFeederGuilds', iFeederGuilds, ...
    'iConsumerAndFishGuilds', iConsumerAndFishGuilds, ...
    'iLarvaeFishGuilds', iLarvaeFishGuilds, ...
    'iJuvenileFishGuilds', iJuvenileFishGuilds, ...
    'iAdultFishGuilds', iAdultFishGuilds, ...
    'nGuilds', nGuilds, ...
    'nDetritusGuilds', nDetritusGuilds, ...
    'nProducerGuilds', nProducerGuilds, ...
    'nConsumerGuilds', nConsumerGuilds, ...
    'nConsumerAndFishGuilds', nConsumerAndFishGuilds, ...
    'nFishSpecies', nFishSpecies, ...
    'nFishGuilds', nFishGuilds, ...
    'nFoodGuilds', nFoodGuilds, ...
    'nFeederGuilds', nFeederGuilds, ...
    'nAdultFishGuilds', nAdultFishGuilds, ...
    'nLarvaeFishGuilds', nLarvaeFishGuilds, ...
    'nJuvenileFishGuilds', nJuvenileFishGuilds, ...
    'iAdultFishGuildsInFish', iAdultFishGuildsInFish, ...
    'iDOCInFoodGuilds', iDOCInFoodGuilds, ...
    'iProducerGuildsInFood', iProducerGuildsInFood, ...
    'iFishGuildsInConsumers', iFishGuildsInConsumers, ...
    'iFishGuildsInFeeders', iFishGuildsInFeeders, ...
    'iFishGuildsInFood', iFishGuildsInFood, ...
    'iFishFoodInFishGuilds', iFishFoodInFishGuilds, ...
    'iNonFishGuildsInConsumers', iNonFishGuildsInConsumers, ...
    'iNonFishGuildsInFeeders', iNonFishGuildsInFeeders, ...
    'iConsumerGuildsInFood', iConsumerGuildsInFood, ...
    'iConsumerFoodGuildsInConsumers', iConsumerFoodGuildsInConsumers, ...
    'iConsumerNonfoodGuildsInConsumers', iConsumerNonfoodGuildsInConsumers, ...
    'iProducerFoodGuildsInProducers', iProducerFoodGuildsInProducers, ...
    'iBacInConsumers', iBacInConsumers, ...
    'iConsumerGuildsInFeeders', iConsumerGuildsInFeeders, ...
    'iFeederGuildsInConsumersAndFish', iFeederGuildsInConsumersAndFish, ...
    'FishAges', FishAges);